- Створи нову гілку (branch) репозиторію в Github і перемістися в неї (checkout)

- Створи табличку в локальній Postgres DB з полями db_id (str, унікальне значення, яке генерується автоматично), r030 (int), currency_id (int), currency_name (str), currency_code (str), exchange_date (date), acquisition_datetime (timestamp, також генерується автоматично)

- Витягни дані в локальну Postgres DB з [https://bank.gov.ua/ua/open-data/api-dev](https://bank.gov.ua/ua/open-data/api-dev) - розділ 1: Офіційний курс гривні до іноземних валют та облікова ціна банківських металів >>> Курс на дату по валюті >>> формат json.  Зразок запиту: [https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?valcode=AMD&date=20210302&json](https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?valcode=AMD&date=20210302&json)

- Потрібно витягнути дані для долара США (USD), євро (EUR), мексиканського песо (MXN), рупії (IRN), іранського ріалу (IRR), ларі (GEL) до гривні для кожного дня, починаючи з 1 січня 2021.

- Функція, яка керує витягенням даних повинна мати можливість задати будь-який код валюти (навіть не зі списку зверху) для будь-якої дати. Якщо є відповідь від АРІ, відмінна від 200, то потрібно зберегти пару (дата, валюта), для якої не вдалося витягнути дані і продовжити. Для того, щоб API не сварився, варто задати паузу в декілька секунд після кожного запиту.

- Окремо потрібно налаштувати спарк процесор, який тягне дані з PostgresDB, створює нову колонку з конвертацією поточної валюти до долара, створює партиції для кожної валюти і заливає то все на S3 в форматі parquet.

- Шляхи, списки валют, початкова дата і інші конфіги (крім доступів) мають зберігатися в окремих файликах з конфігами.

- Залий на Github в нову гілку, відкрий Pull Request і додай мене до нього як рев'ювера